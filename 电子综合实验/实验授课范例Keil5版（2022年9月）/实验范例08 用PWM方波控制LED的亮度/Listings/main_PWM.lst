C51 COMPILER V9.56.0.0   MAIN_PWM                                                          09/28/2022 15:04:50 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN_PWM
OBJECT MODULE PLACED IN .\Objects\main_PWM.obj
COMPILER INVOKED BY: D:\MDK_v525\C51\BIN\C51.EXE main_PWM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main_PWM.lst) TABS(2) OBJECT(.\Objects\main_PWM.obj)

line level    source

   1          /*
   2            main.c
   3            通过k1、k2按键控制PWM占空比，并用PWM方波控制LED的亮度，PWM周期=16ms
   4            亮度等级（0-15, 16级）显示在数码管的最后2位
   5          */
   6          
   7          
   8          #include <reg52.h>
   9          
  10          //定义显示缓冲区（由定时中断程序自动扫描）
  11          unsigned char DispBuf[8];
  12          
  13          //智能小车数码管显示电路管脚定义
  14          sbit SS = P2^6;    //数码管段选信号
  15          sbit CS = P2^7;    //数码管位选信号
  16          //智能小车数码管按键电路管脚定义
  17          sbit KEY1 = P3^4;   //定义按键1，'+'按键，对应核心板上K1
  18          sbit KEY2 = P3^5;   //定义按键2，'-'按键，对应核心板上K2
  19          code unsigned char Tab[] =
  20            {//定义0123456789AbCdEF的数码管字型数据，其他显示字符需自行计算，如‘-’的字形数据为0x40
  21              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,
  22              0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71
  23            };
  24            
  25          //定义I/O接口
  26          sbit PWM = P1^0;    //PWM输出（接LED）
  27            
  28          //定义PWM最大级数，也就是调节LED的亮度等级
  29          #define PWM_MAX   16
  30          //定义PWM级数，分为0～PWM_MAX-1级
  31          unsigned char PwmValue;
  32            
  33          /*
  34          函数：T1INTSVC()
  35          功能：定时器T1的中断服务函数
  36          */
  37          void T1INTSVC() interrupt 3 //定时器1的中断号为：3
  38          {
  39   1        code unsigned char com[] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01}; //显示位的端口控制字节
  40   1        static unsigned char n = 0;           //n: 扫描显示位计数,0-7
  41   1        static unsigned char t = 0;
  42   1      
  43   1      //================数码管定时扫描驱动显示=============== 
  44   1        TR1 = 0;
  45   1        TH1 = 0xFC;
  46   1        TL1 = 0x66;           //可以将FC66换成0000，降低扫描速度，观察和理解动态扫描
  47   1        TR1 = 1;
  48   1        P0 = 0xFF;    //消隐
  49   1        CS = 1;
  50   1        CS = 0;
  51   1        P0 = DispBuf[n];  //更新扫描显示数据
  52   1        SS = 1;
  53   1        SS = 0;
  54   1        P0 = ~com[n]; //重新显示
C51 COMPILER V9.56.0.0   MAIN_PWM                                                          09/28/2022 15:04:50 PAGE 2   

  55   1        CS = 1;
  56   1        CS = 0;
  57   1        n++;            //指向下一位扫描显示
  58   1        n &= 0x07;
  59   1      //====================================================
  60   1      //==========利用定时中断实现脉宽调制====================
  61   1        t++;                        //注意t的定义方式
  62   1        if ( t >= PWM_MAX ) t = 0;  //PWM波的周期为：PWM_MAX*1ms = 16ms
  63   1        if ( t < PwmValue )
  64   1        {
  65   2          PWM = 0;    //PWM波低电平时间(LED亮)：PwmValue*1ms
  66   2        }
  67   1        else
  68   1        {
  69   2          PWM = 1;    //PWM波高电平时间(LED灭)：（PWM_MAX-PwmValue）*1ms
  70   2        }
  71   1      //====================================================
  72   1      }
  73          
  74          
  75          /*
  76          函数：DispClear()
  77          功能：清除数码管的所有显示
  78          */
  79          void DispClear()
  80          {
  81   1        unsigned char i;
  82   1        for ( i=0; i<8; i++ )
  83   1        {
  84   2          DispBuf[i] = 0x00;  //i值代表数码管的位数，可以在后面的程序观察是左起还是右起，0x00可以关闭数码管显示
  85   2        }
  86   1      }
  87          
  88          /*
  89          函数：Delay()
  90          功能：延时
  91          说明：
  92            晶振频率为11.0592MHz
  93            延时长度 = 1ms * t
  94          */
  95          void Delay(unsigned int t)
  96          {
  97   1        unsigned int us_ct;
  98   1        for (;t > 0;t --)   //执行代码消耗CPU时间
  99   1          for (us_ct = 113;us_ct > 0;us_ct --); 
 100   1      }
 101          
 102          /*
 103          函数：KeyScan()
 104          功能：键盘扫描
 105          返回：扫描到的键值
 106          */
 107          unsigned char KeyScan()
 108          {
 109   1        unsigned char k = '\0';
 110   1      
 111   1        if ( KEY1 == 0 ) k = '+';
 112   1        if ( KEY2 == 0 ) k = '-';
 113   1      
 114   1        return k;
 115   1      }
 116          
C51 COMPILER V9.56.0.0   MAIN_PWM                                                          09/28/2022 15:04:50 PAGE 3   

 117          /*
 118          函数：SysInit()
 119          功能：系统初始化
 120          */
 121          void SysInit()
 122          {
 123   1      
 124   1        DispClear();  //初始为全灭
 125   1      
 126   1        TMOD = 0x11;  //设置定时器T0为16位定时器，定时器T1为16位定时器
 127   1        EA = 0;
 128   1        TH1 = 0xFC;   //设置定时器1的初值: 0xFC66，对应定时时间1ms
 129   1        TL1 = 0x66;
 130   1        ET1 = 1;    //使能定时器T1中断
 131   1        EA = 1;     //使能总中断
 132   1        TR1 = 1;    //启动定时器T1
 133   1      }
 134          
 135          
 136          void main()
 137          {
 138   1      
 139   1        unsigned char k;          //定义键值变量
 140   1        unsigned char cnt = 18;   //定义计数值变量的初始值
 141   1        
 142   1        SysInit();                //系统初始化
 143   1        PwmValue = PWM_MAX / 2;   //设置PWM初值（中间等级亮度）
 144   1        PWM = 1;
 145   1        
 146   1        DispBuf[7] = Tab[1];      //在8位数码管上显示“12345678”字样
 147   1        DispBuf[6] = Tab[2];
 148   1        DispBuf[5] = Tab[3];
 149   1        DispBuf[4] = Tab[4];
 150   1        DispBuf[3] = Tab[5];
 151   1        DispBuf[2] = Tab[6];
 152   1        DispBuf[1] = Tab[7];
 153   1        DispBuf[0] = Tab[8];
 154   1        Delay(2000);          //保留1s
 155   1      
 156   1        DispClear();        //清除显示（数码管上的显示内容全部熄灭
 157   1        DispBuf[1] = Tab[PwmValue / 10];
 158   1        DispBuf[0] = Tab[PwmValue % 10];
 159   1      
 160   1        while(1)
 161   1        {
 162   2          Delay(20);
 163   2          k = KeyScan();  //键盘扫描
 164   2          if ( k != '\0')
 165   2          {
 166   3            if ( k == '+') 
 167   3            {
 168   4              if ( PwmValue < PWM_MAX-1 ) PwmValue++;
 169   4            }
 170   3            if ( k == '-')
 171   3            {
 172   4              if ( PwmValue > 0 ) PwmValue--;
 173   4            }
 174   3            
 175   3            DispBuf[1] = Tab[PwmValue / 10];
 176   3            DispBuf[0] = Tab[PwmValue % 10];
 177   3      
 178   3            while( KeyScan() != '\0');      //等待松开按键
C51 COMPILER V9.56.0.0   MAIN_PWM                                                          09/28/2022 15:04:50 PAGE 4   

 179   3          }
 180   2        }
 181   1      }
 182          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    324    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
