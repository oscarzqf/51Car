C51 COMPILER V9.54   PCF8591                                                               11/23/2022 21:54:16 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PCF8591
OBJECT MODULE PLACED IN .\Objects\PCF8591.obj
COMPILER INVOKED BY: D:\programfile\STM32mini\MDKA\keil\C51\BIN\C51.EXE PCF8591.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\PCF8591.lst) TABS(2) OBJECT(.\Objects\PCF8591.obj)

line level    source

   1          #include <reg52.h>    //包含单片机寄存器的头文件
   2          #include "PCF8591.h"
   3          /*
   4          函数：I2C_Delay()
   5          功能：延时，模拟I2C总线专用
   6          */
   7          void I2C_Delay()
   8          {
   9   1        unsigned char I2C_Delay_t;
  10   1        I2C_Delay_t = (I2C_DELAY_VALUE);
  11   1        while ( --I2C_Delay_t != 0 );
  12   1      }
  13          
  14          
  15          /*
  16          函数：I2C_Init()
  17          功能：I2C总线初始化，使总线处于空闲状态
  18          说明：在main()函数的开始处，通常应当要执行一次本函数
  19          */
  20          void I2C_Init()
  21          {
  22   1        I2C_SCL = 1;
  23   1        I2C_Delay();
  24   1        I2C_SDA = 1;
  25   1        I2C_Delay();
  26   1      }
  27          
  28          
  29          /*
  30          函数：I2C_Start()
  31          功能：产生I2C总线的起始状态
  32          说明：
  33            SCL处于高电平期间，当SDA出现下降沿时启动I2C总线
  34            不论SDA和SCL处于什么电平状态，本函数总能正确产生起始状态
  35            本函数也可以用来产生重复起始状态
  36            本函数执行后，I2C总线处于忙状态
  37          */
  38          void I2C_Start()
  39          {
  40   1        I2C_SDA = 1;
  41   1        I2C_Delay();
  42   1        I2C_SCL = 1;
  43   1        I2C_Delay();
  44   1        I2C_SDA = 0;
  45   1        I2C_Delay();
  46   1        I2C_SCL = 0;
  47   1        I2C_Delay();
  48   1      }
  49          
  50          /***********************************************************
  51          函数：I2C_Stop()
  52          功能：产生I2C总线的停止状态
  53          说明：
  54            SCL处于高电平期间，当SDA出现上升沿时停止I2C总线
C51 COMPILER V9.54   PCF8591                                                               11/23/2022 21:54:16 PAGE 2   

  55            不论SDA和SCL处于什么电平状态，本函数总能正确产生停止状态
  56            本函数执行后，I2C总线处于空闲状态
  57          ***********************************************************/
  58          void I2C_Stop()
  59          {
  60   1        unsigned int t = I2C_STOP_WAIT_VALUE;
  61   1        I2C_SDA = 0;
  62   1        I2C_Delay();
  63   1        I2C_SCL = 1;
  64   1        I2C_Delay();
  65   1        I2C_SDA = 1;
  66   1        I2C_Delay();
  67   1        while ( --t != 0 );   //在下一次产生Start之前，要加一定的延时
  68   1      }
  69          
  70          /*
  71          函数：I2C_Write()
  72          功能：向I2C总线写1个字节的数据
  73          参数：
  74            dat：要写到总线上的数据
  75          */
  76          void I2C_Write(unsigned char dat)
  77          {
  78   1        unsigned char t = 8;
  79   1        do
  80   1        {
  81   2          I2C_SDA = (bit)(dat & 0x80);
  82   2          dat <<= 1;
  83   2          I2C_SCL = 1;
  84   2          I2C_Delay();
  85   2          I2C_SCL = 0;
  86   2          I2C_Delay();
  87   2        } while ( --t != 0 );
  88   1      }
  89          
  90          
  91          /*
  92          函数：I2C_Read()
  93          功能：从从机读取1个字节的数据
  94          返回：读取的一个字节数据
  95          */
  96          unsigned char I2C_Read()
  97          {
  98   1        unsigned char dat;
  99   1        unsigned char t = 8;
 100   1        I2C_SDA = 1;  //在读取数据之前，要把SDA拉高
 101   1        do
 102   1        {
 103   2          I2C_SCL = 1;
 104   2          I2C_Delay();
 105   2          dat <<= 1;
 106   2          if ( I2C_SDA ) dat |= 0x01;
 107   2          I2C_SCL = 0;
 108   2          I2C_Delay();
 109   2        } while ( --t != 0 );
 110   1        return dat;
 111   1      }
 112          
 113          
 114          /*
 115          函数：I2C_GetAck()
 116          功能：读取从机应答位
C51 COMPILER V9.54   PCF8591                                                               11/23/2022 21:54:16 PAGE 3   

 117          返回：
 118            0：从机应答
 119            1：从机非应答
 120          说明：
 121            从机在收到每个字节的数据后，要产生应答位
 122            从机在收到最后1个字节的数据后，一般要产生非应答位
 123          */
 124          bit I2C_GetAck()
 125          {
 126   1        bit ack;
 127   1        I2C_SDA = 1;
 128   1        I2C_Delay();
 129   1        I2C_SCL = 1;
 130   1        I2C_Delay();
 131   1        ack = I2C_SDA;
 132   1        I2C_SCL = 0;
 133   1        I2C_Delay();
 134   1        return ack;
 135   1      }
 136          
 137          
 138          /*
 139          函数：I2C_PutAck()
 140          功能：主机产生应答位或非应答位
 141          参数：
 142            ack=0：主机产生应答位
 143            ack=1：主机产生非应答位
 144          说明：
 145            主机在接收完每一个字节的数据后，都应当产生应答位
 146            主机在接收完最后一个字节的数据后，应当产生非应答位
 147          */
 148          void I2C_PutAck(bit ack)
 149          {
 150   1        I2C_SDA = ack;
 151   1        I2C_Delay();
 152   1        I2C_SCL = 1;
 153   1        I2C_Delay();
 154   1        I2C_SCL = 0;
 155   1        I2C_Delay();
 156   1      }
 157          
 158          /************************************************************
 159          * 函数名        : Pcf8591_DaConversion
 160          * 函数功能      : PCF8591的输出端输出模拟量
 161          * 输入        : addr（器件地址），channel（转换通道），value（转换的数值）
 162          * 输出        : 无
 163          ******************* *****************************************/
 164          bit Pcf8591_DaConversion(unsigned char addr,unsigned char channel,  unsigned char Val)
 165          {
 166   1        I2C_Start();              //启动总线
 167   1        I2C_Write(addr);            //发送器件地址
 168   1        if ( I2C_GetAck() )
 169   1        {
 170   2          I2C_Stop();
 171   2          return 1;
 172   2        }
 173   1         I2C_Write(0x40|channel);              //发送控制字节
 174   1        if ( I2C_GetAck() )
 175   1        {
 176   2          I2C_Stop();
 177   2          return 1;
 178   2        }
C51 COMPILER V9.54   PCF8591                                                               11/23/2022 21:54:16 PAGE 4   

 179   1        I2C_Write(Val);            //发送DAC的数值  
 180   1        if ( I2C_GetAck() )
 181   1        {
 182   2          I2C_Stop();
 183   2          return 1;
 184   2        }
 185   1        I2C_Stop();               //结束总线
 186   1        return 0;
 187   1      }
 188          
 189          /************************************************************
 190          * 函数名      : Pcf8591_SendByte
 191          * 函数功能    : 写入一个控制命令
 192          * 输入      : addr（器件地址），channel（转换通道）
 193          * 输出      : 无
 194          ************************************************************/
 195          bit PCF8591_SendByte(unsigned char addr,unsigned char channel)
 196          {
 197   1        I2C_Start();              //启动总线
 198   1        I2C_Write(addr);            //发送器件地址
 199   1        if ( I2C_GetAck() )
 200   1        {
 201   2          I2C_Stop();
 202   2          return 1;
 203   2        }
 204   1        I2C_Write(0x40|channel);              //发送控制字节
 205   1        if ( I2C_GetAck() )
 206   1        {
 207   2          I2C_Stop();
 208   2          return 1;
 209   2        }
 210   1        I2C_Stop();               //结束总线
 211   1        return 0;
 212   1      }
 213          
 214          /************************************************************
 215          * 函数名        : PCF8591_RcvByte
 216          * 函数功能    : 读取一个转换值
 217          * 输入          :
 218          * 输出          : dat
 219          ************************************************************/
 220          unsigned char PCF8591_RcvByte(unsigned char addr)
 221          {  
 222   1        unsigned char dat;
 223   1      
 224   1        I2C_Start();          //启动总线
 225   1        I2C_Write(addr+1);      //发送器件地址
 226   1        if ( I2C_GetAck() )
 227   1        {
 228   2          I2C_Stop();
 229   2          return 1;
 230   2        }
 231   1        dat=I2C_Read();         //读取数据0
 232   1      
 233   1        I2C_PutAck(1);           //发送非应答信号
 234   1        I2C_Stop();           //结束总线
 235   1        return(dat);
 236   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    262    ----
C51 COMPILER V9.54   PCF8591                                                               11/23/2022 21:54:16 PAGE 5   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
